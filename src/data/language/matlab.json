{
  "id": 21,
  "name": "MATLAB",
  "slug": "matlab",
  "logo": "img/matlab.png",
  "desc": "MATLAB เป็นภาษาและแพลตฟอร์มสำหรับการคำนวณเชิงตัวเลข (Numerical Computing) และการเขียนโปรแกรมเชิงเทคนิค มีชื่อเสียงในการวิเคราะห์ข้อมูล, พัฒนาอัลกอริทึม, สร้างโมเดล และ Simulation ทางวิศวกรรมและวิทยาศาสตร์",
  "by": "MathWorks",
  "yr": "1984",
  "level": "5",
  "par": ["Array-oriented", "Procedural", "Object-Oriented"],
  "fields": ["Scientific", "Data", "Math", "Aero", "HPC", "Digital"],
  "rank": "16-20 แข็งแกร่งใน Academic และ Engineering",
  "salary_range": "฿32,000-52,000 บาท/เดือน (Junior), ฿52,000-85,000 บาท/เดือน (Senior)",
  "pros": [
      "ทรงพลังสำหรับการคำนวณเชิงตัวเลขและเมทริกซ์",
      "มี Toolbox เฉพาะทางสำหรับงานวิศวกรรม/วิทยาศาสตร์",
      "สร้าง Plot และ Visualization ได้ง่าย",
      "มีสภาพแวดล้อมการพัฒนา (IDE) ที่ครบวงจร",
      "ใช้ในการวิจัยและพัฒนาในอุตสาหกรรม"
  ],
  "cons": [
      "เป็นซอฟต์แวร์เชิงพาณิชย์ (มีค่าใช้จ่าย)",
      "ประสิทธิภาพอาจไม่เท่าภาษาคอมไพล์สำหรับงานทั่วไป",
      "ไม่เหมาะสำหรับการพัฒนา Web Application",
      "Learning Curve สำหรับผู้ที่ไม่มีพื้นฐานคณิตศาสตร์/วิศวกรรม"
  ],
  "frameworks": ["None (เป็นแพลตฟอร์ม)"],
  "learn": ["MathWorks Official Documentation", "Coursera: MATLAB Programming", "MATLAB Academy", "Tutorials Point MATLAB"],
  "variables": {
      "declaration (การประกาศ)": [
        "x = 10; % Scalar (กำหนดตัวแปรเดี่ยว)",
        "A = [1 2; 3 4]; % Matrix (กำหนดเมทริกซ์)",
        "str = 'Hello MATLAB'; % String (กำหนดสตริง)"
      ],
      "types (ประเภท)": [
        "double // ประเภทข้อมูลทศนิยมความแม่นยำคู่ (Default)",
        "single // ประเภทข้อมูลทศนิยมความแม่นยำเดี่ยว",
        "int8 // จำนวนเต็ม 8 บิต",
        "uint8 // จำนวนเต็ม 8 บิต (ไม่มีเครื่องหมาย)",
        "logical // ค่าตรรกะ (true/false)",
        "char // ตัวอักขระ (เก็บเป็น Array ของ ASCII values)",
        "string // ประเภทข้อมูลสตริง (ใหม่กว่า char array)",
        "cell // Cell Array (เก็บข้อมูลประเภทต่างกันได้)",
        "struct // Structure (เก็บข้อมูลแบบ Key-Value pairs)",
        "table // Table (คล้าย Data Frame ใน R/Python Pandas)",
        "datetime // วันที่และเวลา"
      ],
      "examples (ตัวอย่าง)": [
          "my_variable = 100; % กำหนดตัวแปร my_variable เป็นตัวเลข 100",
          "name = 'Data Scientist'; % กำหนดตัวแปร name เป็นสตริง",
          "data_array = [1 2 3 4 5]; % สร้าง Array (Vector แถว) ของตัวเลข",
          "is_valid = true; % กำหนดตัวแปร is_valid เป็น boolean",
          "column_vector = [10; 20; 30]; % สร้าง Column Vector (เมทริกซ์ 3x1)",
          "my_cell = {'text', 123, [1 2; 3 4]}; % สร้าง Cell Array",
          "my_struct.field1 = 'value1'; my_struct.field2 = 99; % สร้าง Structure"
      ]
  },
  "functions": {
      "declaration (การประกาศ)": [
        "function [output1, output2] = func_name(input1, input2)\n  % ... (เนื้อหาฟังก์ชัน)\nend % การประกาศฟังก์ชัน (สามารถคืนค่าได้หลายค่า)"
      ],
      "examples (ตัวอย่าง)": [
          "function y = my_sum(a, b) % ฟังก์ชันบวกเลขสองจำนวน\n  y = a + b;\nend\n",
          "function print_message(msg) % ฟังก์ชันแสดงข้อความ\n  disp(msg);\nend\n",
          "// การเรียกใช้ฟังก์ชัน\nresult = my_sum(20, 30); % result จะมีค่า 50\nprint_message('Welcome to MATLAB!'); % แสดงผล 'Welcome to MATLAB!'\n",
          "function [mean_val, std_dev] = calculate_stats(data) % ฟังก์ชันที่คืนค่าหลายค่า\n  mean_val = mean(data);\n  std_dev = std(data);\nend\nscores = [85 90 78 92 88];\n[avg_score, std_score] = calculate_stats(scores); % รับค่าคืนหลายค่า\ndisp(['Average Score: ', num2str(avg_score)]);\ndisp(['Standard Deviation: ', num2str(std_score)]);\n",
          "function plot_data(x_data, y_data, plot_title) % ฟังก์ชันสำหรับการสร้างกราฟ\n  plot(x_data, y_data, '-o');\n  title(plot_title);\n  xlabel('X-axis');\n  ylabel('Y-axis');\n  grid on;\nend\n% ตัวอย่างการเรียกใช้\n% x = 1:0.5:10;\n% y = sin(x);\n% plot_data(x, y, 'Sine Wave Plot');\n",
          "// Asynchronous Programming (Toolbox-specific)\n// MATLAB ไม่ได้มี Asynchronous Programming ในตัวแบบภาษาสมัยใหม่ (async/await)\n// แต่สามารถจัดการ Concurrency ได้ผ่าน Parallel Computing Toolbox (parfor, parfeval)\n// หรือใช้ Timer objects สำหรับงานที่ต้องหน่วงเวลา\n/*\n% ตัวอย่างการใช้ Timer object เพื่อเรียกฟังก์ชันแบบ Asynchronous\nfunction async_task_example()\n  t = timer('ExecutionMode', 'single', 'StartDelay', 1, 'TimerFcn', @myCallbackFunction);\n  start(t);\n  disp('Main program continues while timer is running...');\nend\n\nfunction myCallbackFunction(obj, event)\n  disp('Timer callback executed after delay!');\n  delete(obj); % ลบ Timer เมื่อทำงานเสร็จ\nend\n% ใน Command Window หรือ Script อื่น: async_task_example()\n*/"
      ],
      "built_in (ในตัว)": [
        "disp() // ใช้แสดงผลข้อมูลออกทาง Command Window",
        "plot() // ใช้สร้างกราฟ 2 มิติ",
        "sum() // ใช้คำนวณผลรวมของ Array/Vector",
        "mean() // ใช้คำนวณค่าเฉลี่ย",
        "sin() // คำนวณค่า Sine",
        "cos() // คำนวณค่า Cosine",
        "size() // คืนค่าขนาดของ Array/Matrix",
        "zeros() // สร้าง Array/Matrix ที่มีค่าเป็นศูนย์ทั้งหมด",
        "ones() // สร้าง Array/Matrix ที่มีค่าเป็นหนึ่งทั้งหมด",
        "num2str() // แปลงตัวเลขเป็นสตริง",
        "str2double() // แปลงสตริงเป็น Double",
        "imread() // อ่านไฟล์รูปภาพ",
        "imshow() // แสดงรูปภาพ"
      ]
  },
  "syntax": {
      "comments (คอมเมนต์)": [
        "% Single line comment // คอมเมนต์บรรทัดเดียว",
        "/* Multi-line\n   comment */ % MATLAB ไม่รองรับ Multi-line comment แบบนี้โดยตรง\n             % ควรใช้ % ในทุกบรรทัด หรือใช้ %{ ... %} สำหรับบล็อกคอมเมนต์ (หลัง R2016b)"
      ],
      "conditions (เงื่อนไข)": [
        "if condition\n  % ... (โค้ด)\nelseif condition\n  % ... (โค้ด)\nelse\n  % ... (โค้ด)\nend // คำสั่ง if-elseif-else",
        "switch expression\n  case value1\n    % ... (โค้ด)\n  case value2\n    % ... (โค้ด)\n  otherwise\n    % ... (โค้ด)\nend // คำสั่ง switch"
      ],
      "loops (การวนซ้ำ)": [
        "for i = 1:5\n  % ... (โค้ด)\nend // ลูป for (วนซ้ำตามช่วงตัวเลขหรือ Element ใน Array)",
        "while condition\n  % ... (โค้ด)\nend // ลูป while"
      ],
      "operators (ตัวดำเนินการ)": [
        "Arithmetic: +, -, *, /, .*, ./, ^, .^ // ตัวดำเนินการทางคณิตศาสตร์: บวก, ลบ, คูณ Matrix, หาร Matrix, คูณ Element-wise, หาร Element-wise, ยกกำลัง Matrix, ยกกำลัง Element-wise",
        "Assignment: = // ตัวดำเนินการกำหนดค่า",
        "Comparison: ==, ~=, >, <, >=, <= // ตัวดำเนินการเปรียบเทียบ: เท่ากับ, ไม่เท่ากับ, มากกว่า, น้อยกว่า ฯลฯ",
        "Logical: && (AND), || (OR), ~ (NOT) // ตัวดำเนินการตรรกะ: และ, หรือ, ไม่",
        ": // Colon operator (ใช้สร้างลำดับตัวเลข หรือเข้าถึง Element ทั้งหมด)"
      ],
      "examples": [
          "// ตัวอย่างที่ 1: การใช้เงื่อนไข (if-else)\ntemp = 35;\nif temp > 30\n  disp('Hot weather');\nelseif temp < 10\n  disp('Cold weather');\nelse\n  disp('Normal weather');\nend\n",
          "// ตัวอย่างที่ 2: การใช้วงลูป (for loop)\nfor i = 1:3\n  disp(['Loop MATLAB: ', num2str(i)]); % ใช้ num2str เพื่อแปลงตัวเลขเป็นสตริงก่อนเชื่อม\nend\n",
          "// ตัวอย่างที่ 3: การใช้ Switch Statement\nfruit = 'apple';\nswitch fruit\n  case 'apple'\n    disp('It is an apple.');\n  case 'banana'\n    disp('It is a banana.');\n  otherwise\n    disp('Unknown fruit.');\nend\n",
          "// ตัวอย่างที่ 4: การทำงานกับเมทริกซ์และ Vector Operations\nA = [1 2; 3 4];\nB = [5 6; 7 8];\nC_add = A + B; % การบวกเมทริกซ์\nC_multiply = A * B; % การคูณเมทริกซ์\nC_elem_multiply = A .* B; % การคูณแบบ Element-wise\n\ndisp('Matrix Addition:'); disp(C_add);\ndisp('Matrix Multiplication:'); disp(C_multiply);\ndisp('Element-wise Multiplication:'); disp(C_elem_multiply);\n\nv = [10 20 30];\nw = v * 2; % คูณทุก Element ด้วย 2\ndisp('Vector multiplied by scalar:'); disp(w);\n",
          "// ตัวอย่างที่ 5: การจัดการข้อผิดพลาด (Error Handling) ด้วย try-catch\ntry\n  numerator = 10;\n  denominator = 0;\n  result = numerator / denominator; % จะเกิด DivisionByZero error\n  disp(result);\ncatch ME\n  disp(['Error occurred: ', ME.message]);\n  % disp(ME.stack); % แสดง stack trace\nfinally\n  disp('Execution completed.');\nend\n",
          "// ตัวอย่างที่ 6: การอ่านและเขียนไฟล์ (File I/O)\n% การเขียนข้อความลงไฟล์\nfid = fopen('my_file.txt', 'w'); % เปิดไฟล์สำหรับเขียน\nfprintf(fid, 'This is a test line.\\n');\nfprintf(fid, 'Another line.\\n');\nfclose(fid);\ndisp('Text written to my_file.txt');\n\n% การอ่านข้อความจากไฟล์\nfid = fopen('my_file.txt', 'r'); % เปิดไฟล์สำหรับอ่าน\nt1 = fgetl(fid); % อ่านทีละบรรทัด\nt2 = fgetl(fid);\nfclose(fid);\ndisp(['Read line 1: ', t1]);\ndisp(['Read line 2: ', t2]);\n"
      ]
  }
}
